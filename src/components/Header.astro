---
import { Image } from 'astro:assets';
import logoReiDoGarfo from '../assets/logo_reidogarfob.png';

const menuItems = [
  { href: "#inicio", text: "Início" },
  { href: "#quem-somos", text: "Nossa História" },
  { href: "#cardapio", text: "Cardápio" },
  { href: "#especialidades", text: "Especialidades" },
  { href: "#depoimentos", text: "Depoimentos" },
  { href: "#contato", text: "Reservas" },
];
---

<header id="header" class="fixed w-full bg-gradient-to-r from-dark-chocolate/95 to-wine-red/95 backdrop-blur-md z-50 py-4 shadow-lg transition-all duration-300">
  <div class="container mx-auto px-4 flex justify-between items-center">
    <a href="#inicio" class="flex items-center group">
      <div class="mr-3 group-hover:scale-110 transition-transform duration-300">
        <Image
          src={logoReiDoGarfo}
          alt="Rei do Garfo - Restaurante"
          class="h-16 w-auto object-contain"
        />
      </div>
    </a>
          
    <nav class="hidden md:block">
      <ul class="flex space-x-8">
        {menuItems.map((item) => (
          <li>
            <a
              href={item.href}
              class="text-cream hover:text-golden-yellow transition-all duration-300 font-medium relative group"
            >
              {item.text}
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-golden-yellow transition-all duration-300 group-hover:w-full"></span>
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Menu Mobile -->
    <button
      id="mobile-menu-button"
      class="md:hidden text-cream hover:text-golden-yellow transition-colors duration-300"
      aria-label="Menu"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
        />
      </svg>
    </button>
  </div>

  <!-- Menu Mobile Dropdown -->
  <div
    id="mobile-menu"
    class="hidden md:hidden bg-gradient-to-r from-dark-chocolate/98 to-wine-red/98 backdrop-blur-md absolute w-full left-0 py-6 px-4 shadow-xl border-t border-golden-yellow/20"
  >
    <ul class="space-y-4">
      {menuItems.map((item) => (
        <li>
          <a
            href={item.href}
            class="block text-cream hover:text-golden-yellow transition-colors duration-300 py-2 px-4 rounded-lg hover:bg-golden-yellow/10"
          >
            {item.text}
          </a>
        </li>
      ))}
    </ul>
  </div>
</header>

<script>
  const header = document.getElementById('header');
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  // Função para alterar transparência do header ao rolar
  function handleScroll() {
    const scrollY = window.scrollY;
    
    if (scrollY > 100) {
      // Mais transparente quando rola para baixo
      header?.classList.remove('bg-gradient-to-r', 'from-dark-chocolate/95', 'to-wine-red/95');
      header?.classList.add('bg-gradient-to-r', 'from-dark-chocolate/70', 'to-wine-red/70');
    } else {
      // Opacidade normal no topo
      header?.classList.remove('bg-gradient-to-r', 'from-dark-chocolate/70', 'to-wine-red/70');
      header?.classList.add('bg-gradient-to-r', 'from-dark-chocolate/95', 'to-wine-red/95');
    }
  }

  // Adicionar listener para scroll
  window.addEventListener('scroll', handleScroll);

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Fechar menu ao clicar em um link
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
  });

  // Smooth scroll para links internos
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script>